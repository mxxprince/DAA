def quick_sort(arr):
    def partition(low, high):
        pivot = arr[high]
        i = low - 1
        for j in range(low, high):
            if arr[j] < pivot:
                i += 1
                arr[i], arr[j] = arr[j], arr[i]
        arr[i + 1], arr[high] = arr[high], arr[i + 1]
        return i + 1

    def quick_sort_recursive(low, high):
        if low < high:
            pi = partition(low, high)
            quick_sort_recursive(low, pi - 1)
            quick_sort_recursive(pi + 1, high)
    
    quick_sort_recursive(0, len(arr) - 1)
    return arr

# Test Cases
print(quick_sort([5, 2, 9, 1, 5, 6]))  # Expected Output: [1, 2, 5, 5, 6, 9]
print(quick_sort([3, 7, 3, 5, 2, 5, 9, 2]))  # Expected Output: [2, 2, 3, 3, 5, 5, 7, 9]
print(quick_sort([-1, 2, -1, 3, 2, -2]))  # Expected Output: [-2, -1, -1, 2, 2, 3]
print(quick_sort([1000000, 999999, 1000000]))  # Expected Output: [999999, 1000000, 1000000]
