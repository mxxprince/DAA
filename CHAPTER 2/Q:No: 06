def find_peak_element(nums):
    n = len(nums)
    left, right = 0, n - 1
    
    while left <= right:
        mid = (left + right) // 2
        
        # Check if mid is a peak element
        if (mid == 0 or nums[mid] > nums[mid - 1]) and (mid == n - 1 or nums[mid] > nums[mid + 1]):
            return mid
        
        # If nums[mid-1] > nums[mid], peak must be on the left side
        elif mid > 0 and nums[mid - 1] > nums[mid]:
            right = mid - 1
        
        # If nums[mid+1] > nums[mid], peak must be on the right side
        else:
            left = mid + 1
    
    return -1  # In case no peak is found (not expected by the problem statement)

# Test cases
nums1 = [1, 2, 3, 1]
nums2 = [1, 2, 1, 3, 5, 6, 4]

print(find_peak_element(nums1))  # Output: 2
print(find_peak_element(nums2))  # Output: 5
